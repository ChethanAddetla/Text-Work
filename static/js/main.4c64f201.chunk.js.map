{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextFrame.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","data-bs-dismiss","aria-label","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","home","aria-disabled","onClick","toggleMode","htmlFor","TextFrame","handleUpcase","entered","text","settext","showAlert","useState","style","addedstyle","heading1","value","onChange","event","target","rows","btnclr","handlelowercase","console","log","newtext","handleclearcase","split","length","defaultProps","App","mode1","setmode1","mode2","setmode2","setbtnclr","style1","newstyle","Color","backgroundColor","color","setalert","showalert","message","setTimeout","Fragment","document","body","togglered","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4c64f201.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>\r\n    {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        props.alert &&\r\n          <div className={`alert alert-${props.alert.type} alert-dismissible fade show` } role=\"alert\">\r\n                <strong>{  capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        \r\n    \r\n    )\r\n}\r\n","import React from 'react'\r\n// import {a} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`} >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\" href=\"#\" aria-disabled=\"true\">Disabled</a>\r\n            </li>\r\n          </ul>\r\n          \r\n          <div className={`form-check form-check-inline text-${props.mode === 'light' ? 'black' : 'white'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n  title: 'this is react ',\r\n  home: 'home page'\r\n}\r\n\r\n\r\n","\r\nimport React, { useState } from 'react'\r\n\r\nexport default function TextFrame(props) {\r\n  const handleUpcase = () => {\r\n    let entered = text.toUpperCase();\r\n    settext(entered);\r\n    props.showAlert(\"Converted to Upper Case!!\",\"success\");\r\n  }\r\n  const handleonChange = (event) => {\r\n    settext(event.target.value);\r\n  }\r\n\r\n  const handlelowercase = () => {\r\n    console.log(\"clicked lower case\")\r\n    let newtext = text.toLowerCase();\r\n    settext(newtext);\r\n    props.showAlert(\"Converted to Lower Case!!\",\"success\");\r\n  }\r\n  const handleclearcase = () => {\r\n    let newtext = \"\";\r\n    settext(newtext);\r\n    props.showAlert(\"Cleared the text box!!\",\"success\");\r\n  }\r\n\r\n  \r\n  const [text, settext] = useState('Enter your text');\r\n\r\n  return (\r\n\r\n    <div className=\"mb-3\" style={props.addedstyle}>\r\n      <h1>{props.heading1}</h1>\r\n      <div className=\"mb-3\" style={props.addedstyle} >\r\n        <textarea className=\"form-control\" value={text} onChange={handleonChange}  style={props.addedstyle} id=\"mybox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className={`btn btn-${props.btnclr} mx-2`} onClick={handleUpcase} >Uppercase</button>\r\n      <button className={`btn btn-${props.btnclr} mx-2`} onClick={handlelowercase} >Lowercase</button>\r\n      <button className={`btn btn-${props.btnclr} mx-2`} onClick={handleUpcase} >Capitalize</button>\r\n      <button className={`btn btn-${props.btnclr} mx-2`} onClick={handleclearcase} >Clear Text</button>\r\n\r\n     <div className=\"container my-4\" >\r\n     <h3>Text Summery</h3>\r\n      <p>{text.split(\" \").length} words and {text.length} Charecters</p>\r\n      <p> {0.008*text.split(\" \").length} time takes to read this content</p>\r\n      <h3>Preview</h3>\r\n      <p>{text}</p>\r\n\r\n\r\n     </div>\r\n      \r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n","\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextFrame from './Components/TextFrame';\n// import About from './Components/About';\nimport React, { useState } from 'react';\n\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode1, setmode1] = useState('light');\n\n  const toggleMode = () => {\n    if (mode1 === 'light') {\n      setmode1(\"dark\")\n      document.body.style.backgroundColor = '#004480';\n      addedstyle();\n      showalert('Dark mode enabled', 'success')\n      document.title = 'Text Work-Dark Mode';\n\n      // setInterval(()=>\n      // {\n      //   document.title='Text Work so elegent';\n      // },2000);\n      // setInterval(()=>\n      // {\n      //   document.title='Text Work so beautyful';\n      // },1500);\n\n    }\n    else {\n      setmode1(\"light\")\n      document.body.style.backgroundColor = 'White';\n      addedstyle();\n      showalert('Light mode enabled', 'success')\n      document.title = 'Text Work-Light Mode';\n    }\n\n  }\n  const [mode2, setmode2] = useState('light');\n  const [btnclr, setbtnclr] = useState('primary');\n\n  const togglered = () => {\n    if (mode2 === 'light') {\n      setmode2('red')\n      document.body.style.backgroundColor = '#521116';\n      addedstyle();\n      showalert('Red mode enabled', 'success');\n      setbtnclr('danger');\n    }\n    else {\n      setmode2(\"light\")\n      document.body.style.backgroundColor = 'white';\n      addedstyle();\n      showalert('Light mode enabled', 'success');\n      setbtnclr('pr');\n    }\n\n  }\n  const [style1, newstyle] = useState(\n    {\n      Color: 'black',\n      backgroundColor: 'white'\n    }\n\n  );\n\n  const addedstyle = () => {\n    if (mode1 === 'light') {\n      newstyle(\n        {\n          color: 'white',\n          backgroundColor: '#2d3654'\n        }\n      )\n    }\n    else {\n      newstyle(\n        {\n          color: 'black',\n          backgroundColor: 'white'\n        }\n      )\n    }\n\n\n  }\n\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    })\n\n    setTimeout(() => {\n      setalert(null);\n    }, 3000);\n\n\n\n  }\n\n  return (\n    <>\n      <Navbar title=\"Text Work\" mode={mode1} toggleMode={toggleMode} togglered={togglered} />\n\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <TextFrame showAlert={showalert} heading1=\"Enter your text your\" addedstyle={style1} btnclr={btnclr} />\n      </div>\n      {/* <Router>\n        <Navbar title=\"Text Work\" mode={mode1} toggleMode={toggleMode} togglered={togglered} />\n        <Alert alert={alert} />\n        <Switch>\n        \n          <Route exact path=\"/about\">\n          <div className=\"container\">\n            <About/>\n            </div>\n          </Route>\n          <Route exact path=\"/\">\n          <div className=\"container\">\n            <TextFrame showAlert={showalert} heading1=\"Enter your text your\" addedstyle={style1} btnclr={btnclr} />\n            </div>\n          </Route>\n          \n        </Switch>\n      </Router> */}\n    </>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}